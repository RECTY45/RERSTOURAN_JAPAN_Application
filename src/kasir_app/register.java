/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kasir_app;
import java.awt.Toolkit;
import java.sql.*;
import javax.swing.Icon;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
/**
 *
 * @author Muh Israjab DS
 */
public class register extends javax.swing.JFrame {
    private DefaultTableModel model = null;
    private PreparedStatement stat;
    private ResultSet rs;
    koneksi k = new koneksi();
    /**
     * Creates new form register
     */
    public register() {
        Icons();
        initComponents();
        k.connect();
        refreshTable();
    }

    private void Icons() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("apk-logo .png")));
    }
    
    Icon icon = new javax.swing.ImageIcon(getClass().getResource("success-icon.png"));
    
   public class user extends register{
        int id;
        String nama_user,username,password,level;

        public user() {
            this.id = 0;
            this.nama_user = namaUser.getText();
            this.username = usernameUser.getText();
            this.password = passwordUser.getText();
            this.level = levelUser.getSelectedItem().toString();
        }
        
    }
public void refreshTable(){
            model = new DefaultTableModel();
            model.addColumn("Id");
            model.addColumn("Nama User");
            model.addColumn("Username");
            model.addColumn("Password");
            model.addColumn("Level");
           tableRegister.setModel(model);
           try {
               this.stat = k.getCon().prepareStatement("SELECT * FROM users");
               this.rs = this.stat.executeQuery();
               while(rs.next()){
                   Object[] data = {
                       rs.getString("id"),
                       rs.getString("nama_user"),
                       rs.getString("username"),
                       rs.getString("password"),
                       rs.getString("level"),
                   };
                   model.addRow(data);
               }
        
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, e.getMessage());
    }
           idUser.setText("");
           namaUser.setText("");
           usernameUser.setText("");
           passwordUser.setText("");
        }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        namaUser = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        levelUser = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        usernameUser = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        passwordUser = new javax.swing.JTextField();
        inputUser = new javax.swing.JButton();
        updateUser = new javax.swing.JButton();
        deleteUser = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableRegister = new javax.swing.JTable();
        idUser = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        jLabel4.setText("jLabel4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(759, 982));
        getContentPane().setLayout(null);

        jLabel3.setFont(new java.awt.Font("Bodoni Bk BT", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("REGISTRASI");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(310, 100, 150, 29);

        jLabel5.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Nama User");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(150, 230, 160, 23);

        namaUser.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        namaUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaUserActionPerformed(evt);
            }
        });
        getContentPane().add(namaUser);
        namaUser.setBounds(150, 260, 430, 40);

        jLabel6.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Level");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(150, 320, 70, 23);

        levelUser.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        levelUser.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admin", "Kasir", "Owner" }));
        levelUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                levelUserActionPerformed(evt);
            }
        });
        getContentPane().add(levelUser);
        levelUser.setBounds(150, 350, 430, 40);

        jLabel7.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Username");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(150, 410, 110, 23);

        usernameUser.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        usernameUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameUserActionPerformed(evt);
            }
        });
        getContentPane().add(usernameUser);
        usernameUser.setBounds(150, 440, 430, 40);

        jLabel8.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Password");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(150, 500, 100, 23);

        passwordUser.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        passwordUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordUserActionPerformed(evt);
            }
        });
        getContentPane().add(passwordUser);
        passwordUser.setBounds(150, 530, 430, 40);

        inputUser.setBackground(new java.awt.Color(0, 0, 0));
        inputUser.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        inputUser.setForeground(new java.awt.Color(255, 255, 255));
        inputUser.setText("INPUT");
        inputUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputUserActionPerformed(evt);
            }
        });
        getContentPane().add(inputUser);
        inputUser.setBounds(120, 650, 120, 40);

        updateUser.setBackground(new java.awt.Color(0, 0, 0));
        updateUser.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        updateUser.setForeground(new java.awt.Color(255, 255, 255));
        updateUser.setText("UPDATE");
        updateUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateUserActionPerformed(evt);
            }
        });
        getContentPane().add(updateUser);
        updateUser.setBounds(310, 650, 120, 40);

        deleteUser.setBackground(new java.awt.Color(0, 0, 0));
        deleteUser.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        deleteUser.setForeground(new java.awt.Color(255, 255, 255));
        deleteUser.setText("DELETE");
        deleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteUserActionPerformed(evt);
            }
        });
        getContentPane().add(deleteUser);
        deleteUser.setBounds(490, 650, 120, 40);

        tableRegister.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        tableRegister.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID User", "Nama User", "Username", "Password", "Level"
            }
        ));
        tableRegister.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableRegisterMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableRegister);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(0, 780, 760, 200);

        idUser.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        idUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idUserActionPerformed(evt);
            }
        });
        getContentPane().add(idUser);
        idUser.setBounds(120, 210, 0, 10);

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kasir_app/logout.png"))); // NOI18N
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel9);
        jLabel9.setBounds(680, 0, 80, 88);

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kasir_app/BackButton .png"))); // NOI18N
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel10);
        jLabel10.setBounds(0, 10, 150, 48);

        jLabel2.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kasir_app/bgtransregis.png"))); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(1, 6, 760, 980);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kasir_app/bgregis.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 760, 990);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void usernameUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameUserActionPerformed

    private void passwordUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordUserActionPerformed

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        // TODO add your handling code here:
        login l = new login();
        l.setVisible(true);
        this.setVisible(false);
        dispose();
              
    }//GEN-LAST:event_jLabel9MouseClicked

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        // TODO add your handling code here:
        menu_admin m = new menu_admin();
        m.setVisible(true);
        this.setVisible(false);
        dispose(); 
    }//GEN-LAST:event_jLabel10MouseClicked

    private void inputUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputUserActionPerformed
        
        if(namaUser.getText().isEmpty() || usernameUser.getText().isEmpty()){
            JOptionPane.showMessageDialog(this,"DATA TIDAK BOLEH KOSONG BRO !","Warning",JOptionPane.WARNING_MESSAGE);
        }else{
            try {
            
           PreparedStatement validate = k.getCon().prepareStatement("SELECT * FROM users WHERE nama_user='" + namaUser.getText()
            +"'or username = '"+usernameUser.getText()+"'");
            this.rs = validate.executeQuery();
            if(rs.next()){
                JOptionPane.showMessageDialog(this, "NAMA USER DAN USERNAME SUDAH ADA SILAHKAN BIKIN YANG BARU BRO !","Error",JOptionPane.ERROR_MESSAGE);
            }else{
                user u =  new user();
            this.stat = k.getCon().prepareStatement("INSERT INTO users VALUES (?,?,?,?,?) ");
            stat.setInt(1, 0);
            stat.setString(2, u.nama_user);
            stat.setString(3, u.username);
            stat.setString(4,u.password);
            stat.setString(5,u.level);
            stat.executeUpdate();
            refreshTable();
            JOptionPane.showMessageDialog(this, "DATA BERHASIL DI INPUT !","Information",JOptionPane.INFORMATION_MESSAGE,icon);
            }
           
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        }
        
    }//GEN-LAST:event_inputUserActionPerformed

    private void tableRegisterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableRegisterMouseClicked
        // TODO add your handling code here:
        idUser.setText(model.getValueAt(tableRegister.getSelectedRow(), 0).toString());
        namaUser.setText(model.getValueAt(tableRegister.getSelectedRow(), 1).toString());
        usernameUser.setText(model.getValueAt(tableRegister.getSelectedRow(), 2).toString());
        passwordUser.setText(model.getValueAt(tableRegister.getSelectedRow(), 3).toString());
        levelUser.setSelectedItem(model.getValueAt(tableRegister.getSelectedRow(), 4).toString());
        
    }//GEN-LAST:event_tableRegisterMouseClicked

    private void updateUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateUserActionPerformed
        // TODO add your handling code here:
                if(namaUser.getText().isEmpty() || usernameUser.getText().isEmpty()){
            JOptionPane.showMessageDialog(this,"DATA TIDAK BOLEH KOSONG BRO!","Warning",JOptionPane.WARNING_MESSAGE);
        }else{
            try {     
                user u =  new user();
           this.stat = k.getCon().prepareStatement("UPDATE users SET username=?,"
            + "password=?,nama_user=?,level=? WHERE id=?");
            stat.setString(1, u.username);
            stat.setString(2, u.password);
            stat.setString(3,u.nama_user);
            stat.setString(4,u.level);
            stat.setString(5, idUser.getText());
            stat.executeUpdate();
            refreshTable();
            JOptionPane.showMessageDialog(this, "DATA BERHASIL DI UBAH !","Information",JOptionPane.INFORMATION_MESSAGE,icon);
           
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        } 
    }//GEN-LAST:event_updateUserActionPerformed

    private void deleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteUserActionPerformed
        // TODO add your handling code here:
       if(idUser.getText().isEmpty()){
           JOptionPane.showMessageDialog(this,"DATA GAGAL DI HAPUS SILAHKAN KLIK DATA PADA TABEL YANG INGIN DI HAPUS !","Error",JOptionPane.ERROR_MESSAGE);
       }else{
            try {
            user u = new user();
            this.stat = k.getCon().prepareStatement("delete from users where id = ?");
            stat.setString(1, idUser.getText());
            stat.executeUpdate();
            refreshTable();
            JOptionPane.showMessageDialog(this, "DATA BERHASIL DI HAPUS !","Information",JOptionPane.INFORMATION_MESSAGE,icon);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
       }
    }//GEN-LAST:event_deleteUserActionPerformed

    private void idUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idUserActionPerformed
        // TODO add your handling code here
    }//GEN-LAST:event_idUserActionPerformed

    private void namaUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namaUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namaUserActionPerformed

    private void levelUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_levelUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_levelUserActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new register().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteUser;
    private javax.swing.JTextField idUser;
    private javax.swing.JButton inputUser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> levelUser;
    private javax.swing.JTextField namaUser;
    private javax.swing.JTextField passwordUser;
    private javax.swing.JTable tableRegister;
    private javax.swing.JButton updateUser;
    private javax.swing.JTextField usernameUser;
    // End of variables declaration//GEN-END:variables
}
