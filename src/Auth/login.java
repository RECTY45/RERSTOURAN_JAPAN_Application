package Auth;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import Config.koneksi;
import DashboardAdmin.*;
import DashboardOwner.menu_owner;
import DashboardKasir.transaksi_kasir;
/**
 *
 * @author Muh Israjab DS
 */
public class login extends javax.swing.JFrame {
    private PreparedStatement stat;
    //Prepared statement adalah sebuah pernyataan SQL yang telah disiapkan sebelumnya
    //Dan dapat digunakan kembali dengan mengikat parameter tertentu
    private ResultSet rs;
        //ResultSet adalah objek yang menyimpan hasil dari sebuah pernyataan query SELECT pada database.
    
    koneksi k = new koneksi();
  
    public login() {
        Icon();
        initComponents();
        k.connect();
        
    }

    private void Icon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("apk-logo .png")));
    }
    
   class user{
       int id;
       String level,nama_user,username,password;

        public user() {
            this.id = 0;
            this.level = "";
            this.nama_user = "";
            this.username = usernames.getText();
            this.password = passwords.getText();
        }
       
       
   }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        usernames = new javax.swing.JTextField();
        passwords = new javax.swing.JPasswordField();
        loginlabel = new javax.swing.JLabel();
        cancellabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(784, 475));
        getContentPane().setLayout(null);

        jLabel2.setFont(new java.awt.Font("Cambria Math", 1, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Log In");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(310, 30, 170, 70);

        jLabel4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Username");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(240, 110, 110, 20);

        jLabel5.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Password");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(240, 200, 110, 22);

        usernames.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        usernames.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernamesActionPerformed(evt);
            }
        });
        getContentPane().add(usernames);
        usernames.setBounds(240, 140, 290, 30);

        passwords.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        passwords.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordsActionPerformed(evt);
            }
        });
        passwords.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passwordsKeyPressed(evt);
            }
        });
        getContentPane().add(passwords);
        passwords.setBounds(240, 230, 290, 30);

        loginlabel.setForeground(new java.awt.Color(255, 255, 255));
        loginlabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kasir_app/loginbutton.png"))); // NOI18N
        loginlabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loginlabelMouseClicked(evt);
            }
        });
        getContentPane().add(loginlabel);
        loginlabel.setBounds(410, 310, 158, 50);

        cancellabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kasir_app/cancelbutton.png"))); // NOI18N
        cancellabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancellabelMouseClicked(evt);
            }
        });
        getContentPane().add(cancellabel);
        cancellabel.setBounds(200, 310, 160, 50);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kasir_app/tran.png"))); // NOI18N
        jLabel3.setText("jLabel3");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(0, -20, 780, 510);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kasir_app/bg.jpg"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(-1, -54, 790, 590);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kasir_app/icon.png"))); // NOI18N
        jLabel6.setText("jLabel6");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(630, 70, 238, 200);

        setSize(new java.awt.Dimension(802, 512));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cancellabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancellabelMouseClicked
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_cancellabelMouseClicked

    private void loginlabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginlabelMouseClicked
       try {
           user u = new user();
            this.stat = k.getCon().prepareStatement("select * from users where "
                        + "username='"+u.username+"' and password='"+u.password+"';");
       this.rs = this.stat.executeQuery(); 
       //Dengan menggunakan pernyataan while (rs.next()), blok kode yang terdapat
       //di dalamnya akan terus diulang sampai tidak ada baris lain yang dapat diakses dari objek ResultSet.
        while (rs.next()){
            u.level = rs.getNString("level");
        }
        if(u.level == ""){
            JOptionPane.showMessageDialog(null, "User Tidak Terdaftar!");
        }else{
             // Switch di gunakan untuk memmilih suatu blok code yang di jalankan berdasarkan nilai true apa bila code yang ada di atas
             // Tidak sesuai maka code tersebut akan di abaikan dan blok code selanjutnya akan di ajalankan apabila sesuai dengan nilai case
             // yang di tentukan
            switch(u.level){
                case  "admin":
                    menu_admin Admin = new menu_admin();
                    Admin.setVisible(true);
                   this.setVisible(false);   
                   break;
                case "owner":
                   menu_owner Owner = new menu_owner();
                   Owner.setVisible(true);
                   this.setVisible(false);
                   break;
                case "kasir":
                    transaksi_kasir kasir = new transaksi_kasir();
                    kasir.setVisible(true);
                    this.setVisible(false);
                    break;
            } 
                    // SetVisible(true) berfungsi untuk menampilkan objeck pada layar apabila Objek telah di Set-Visible true
                    // SetVisible(False) berfungsi untuk menyembunyikan objek padaa layar apa bila objeck di  Set-Visible False 
        }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_loginlabelMouseClicked

    private void usernamesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernamesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernamesActionPerformed

    private void passwordsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordsActionPerformed

    private void passwordsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordsKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
             try {
           user u = new user();
            this.stat = k.getCon().prepareStatement("select * from users where "
                        + "username='"+u.username+"' and password='"+u.password+"';");
       this.rs = this.stat.executeQuery(); 
       //Dengan menggunakan pernyataan while (rs.next()), blok kode yang terdapat
       //di dalamnya akan terus diulang sampai tidak ada baris lain yang dapat diakses dari objek ResultSet.
        while (rs.next()){
            u.level = rs.getNString("level");
        }
        if(u.level == ""){
            JOptionPane.showMessageDialog(null, "User Tidak Terdaftar!");
        }else{
             // Switch di gunakan untuk memmilih suatu blok code yang di jalankan berdasarkan nilai true apa bila code yang ada di atas
             // Tidak sesuai maka code tersebut akan di abaikan dan blok code selanjutnya akan di ajalankan apabila sesuai dengan nilai case
             // yang di tentukan
            switch(u.level){
                case  "admin":
                    menu_admin menu = new menu_admin();
                    menu.setVisible(true);
                   this.setVisible(false);   
                   break;
                case "owner":
                   menu_owner Owner = new menu_owner();
                   Owner.setVisible(true);
                   this.setVisible(false);
                   break;
                case "kasir":
                    transaksi_kasir kasir = new transaksi_kasir();
                    kasir.setVisible(true);
                    this.setVisible(false);
                    break;
            } 
                    // SetVisible(true) berfungsi untuk menampilkan objeck pada layar apabila Objek telah di Set-Visible true
                    // SetVisible(False) berfungsi untuk menyembunyikan objek padaa layar apa bila objeck di  Set-Visible False 
        }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        }
    }//GEN-LAST:event_passwordsKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cancellabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel loginlabel;
    private javax.swing.JPasswordField passwords;
    private javax.swing.JTextField usernames;
    // End of variables declaration//GEN-END:variables
}
